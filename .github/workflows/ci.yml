name: CI/CD Pipeline

on:
  push:
    branches: [main, develop, sovabtc]
  pull_request:
    branches: [main]

env:
  FOUNDRY_PROFILE: ci

jobs:
  test-contracts:
    name: Test Smart Contracts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Run Forge tests
        run: |
          forge test -vvv
        id: test

      - name: Run Forge coverage
        run: |
          forge coverage --report lcov
        id: coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./lcov.info
          flags: smart-contracts
          name: smart-contract-coverage

      - name: Run Slither
        uses: crytic/slither-action@v0.3.0
        continue-on-error: true
        id: slither
        with:
          target: '.'
          slither-args: '--exclude-dependencies --exclude-optimization --exclude-informational'

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run type check
        run: npm run type-check || npx tsc --noEmit

      - name: Run tests
        run: npm test --if-present

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_NETWORK: base-sepolia
          NEXT_PUBLIC_VAULT_ADDRESS: 0x73E27097221d4d9D5893a83350dC7A967b46fab7
          NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID: fbdc02ca1d45b13459b8815d9344ee5a

  deploy-frontend:
    name: Deploy Frontend to Vercel
    needs: [test-contracts, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./frontend

  deploy-indexer:
    name: Deploy Indexer to Railway
    needs: [test-contracts]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Install Railway CLI
        run: |
          curl -fsSL https://railway.app/install.sh | sh

      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          cd examples/ponder-indexer
          railway up --service ponder-indexer

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run dependency check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'fountfi-sovabtc'
          path: '.'
          format: 'HTML'

  release:
    name: Create Release
    needs: [test-contracts, test-frontend]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Create Release Notes
        id: release_notes
        run: |
          echo "## Release $(date +%Y.%m.%d)" > release_notes.md
          echo "" >> release_notes.md
          echo "### Smart Contracts" >> release_notes.md
          echo "- Vault: 0x73E27097221d4d9D5893a83350dC7A967b46fab7" >> release_notes.md
          echo "- Queue: 0x22BC73098CE1Ba2CaE5431fb32051cB4fc0F9C52" >> release_notes.md
          echo "" >> release_notes.md
          echo "### Changes" >> release_notes.md
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: release_notes.md
          files: |
            out/**/*.sol/*.json
            frontend/out/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}