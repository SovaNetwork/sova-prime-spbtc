# Multi-Chain Configuration for SovaBTC
# Copy this file to .env and configure your RPC endpoints

# =============================================================================
# CORE CONFIGURATION
# =============================================================================

# Database Configuration
DATABASE_URL="postgresql://user:password@localhost:5432/sovabtc"
PONDER_DATABASE_URL="postgresql://user:password@localhost:5432/sovabtc_indexer"

# =============================================================================
# INDEXER CONFIGURATION (Ponder)
# =============================================================================

# Comma-separated list of networks to index
# Available networks: ethereum,base,arbitrum,optimism,baseSepolia,sepolia
PONDER_ENABLED_NETWORKS="baseSepolia"

# Indexer port
PONDER_PORT=42069

# =============================================================================
# RPC ENDPOINTS
# =============================================================================

# Mainnet RPC URLs
ETHEREUM_RPC_URL="https://eth-mainnet.g.alchemy.com/v2/YOUR_ALCHEMY_KEY"
BASE_RPC_URL="https://mainnet.base.org"
ARBITRUM_RPC_URL="https://arb1.arbitrum.io/rpc"
OPTIMISM_RPC_URL="https://mainnet.optimism.io"

# Testnet RPC URLs
BASE_SEPOLIA_RPC_URL="https://sepolia.base.org"
SEPOLIA_RPC_URL="https://sepolia.infura.io/v3/YOUR_INFURA_KEY"

# =============================================================================
# SCHEDULER CONFIGURATION
# =============================================================================

# Scheduler service port
SCHEDULER_PORT=3001

# Node environment
NODE_ENV="development"

# =============================================================================
# CONTRACT DEPLOYMENT ADDRESSES
# =============================================================================
# These should be updated as contracts are deployed to new networks

# Base Sepolia (Active)
BASE_SEPOLIA_VAULT_TOKEN="0xfF09B2B0AfEe51E29941091C4dd6B635780BC34a"
BASE_SEPOLIA_VAULT_STRATEGY="0x0A039085Ca2AD68a3FC77A9C5191C22B309126F8"
BASE_SEPOLIA_START_BLOCK="19500000"

# Ethereum Mainnet (To be configured)
# ETHEREUM_VAULT_TOKEN="TBD"
# ETHEREUM_VAULT_STRATEGY="TBD"
# ETHEREUM_START_BLOCK="0"

# Base Mainnet (To be configured)
# BASE_VAULT_TOKEN="TBD"
# BASE_VAULT_STRATEGY="TBD"
# BASE_START_BLOCK="0"

# Arbitrum (To be configured)
# ARBITRUM_VAULT_TOKEN="TBD"
# ARBITRUM_VAULT_STRATEGY="TBD"
# ARBITRUM_START_BLOCK="0"

# Optimism (To be configured)
# OPTIMISM_VAULT_TOKEN="TBD"
# OPTIMISM_VAULT_STRATEGY="TBD"
# OPTIMISM_START_BLOCK="0"

# =============================================================================
# DEPLOYMENT INSTRUCTIONS
# =============================================================================
#
# 1. Copy this file to .env in the project root
# 2. Configure your RPC endpoints with proper API keys
# 3. Set PONDER_ENABLED_NETWORKS to the networks you want to index
# 4. As contracts are deployed to new networks:
#    a. Add the contract addresses above
#    b. Update the contracts object in services/indexer/ponder.config.ts
#    c. Add the network to PONDER_ENABLED_NETWORKS
#    d. Create network entries in the database using the networks API
#    e. Create deployment entries in the database using the deployments API
#
# 5. For production deployments:
#    a. Set NODE_ENV="production"
#    b. Use secure database URLs
#    c. Use reliable RPC providers
#    d. Consider rate limiting and monitoring
#
# =============================================================================
# NETWORK SETUP CHECKLIST
# =============================================================================
#
# For each new network deployment:
# □ Deploy BtcVaultToken and BtcVaultStrategy contracts
# □ Update contract addresses in this file
# □ Add network to PONDER_ENABLED_NETWORKS
# □ Update ponder.config.ts contracts object
# □ POST to /api/networks to create network entry
# □ POST to /api/deployments to create deployment entry
# □ Verify indexer is processing events
# □ Verify scheduler is collecting metrics
# □ Test frontend network switching
#
# =============================================================================